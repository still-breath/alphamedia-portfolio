{"ast":null,"code":"const path = require('path');\nconst fs = require('fs');\nexports.mkdirs = function (_path, mode, callback) {\n  _path = exports.path.abspath(_path);\n  const dirs = _path.split(path.sep);\n  const walker = [dirs.shift()];\n  const walk = function (ds, acc, m, cb) {\n    if (ds.length > 0) {\n      const d = ds.shift();\n      acc.push(d);\n      const dir = acc.join(path.sep);\n      fs.stat(dir, function (err, stat) {\n        if (err) {\n          if (err.errno === -2 || err.errno === -4058) {\n            // Adjusted for cross-platform compatibility\n            fs.mkdir(dir, m, function (erro) {\n              if (erro && erro.errno !== -17 && erro.errno !== -4058) {\n                return cb(erro);\n              } else {\n                return walk(ds, acc, m, cb);\n              }\n            });\n          } else {\n            return cb(err);\n          }\n        } else {\n          if (stat.isDirectory()) {\n            return walk(ds, acc, m, cb);\n          } else {\n            return cb(new Error(\"Failed to mkdir \" + dir + \": File exists\\n\"));\n          }\n        }\n      });\n    } else {\n      return cb();\n    }\n  };\n  return walk(dirs, walker, mode, callback);\n};\nexports.mkdirsSync = function (_path, mode) {\n  if (_path[0] !== path.sep) {\n    _path = path.join(process.cwd(), _path);\n  }\n  const dirs = _path.split(path.sep);\n  const walker = [dirs.shift()];\n  dirs.reduce(function (acc, d) {\n    acc.push(d);\n    const dir = acc.join(path.sep);\n    try {\n      const stat = fs.statSync(dir);\n      if (!stat.isDirectory()) {\n        throw new Error(\"Failed to mkdir \" + dir + \": File exists\");\n      }\n    } catch (err) {\n      fs.mkdirSync(dir, mode);\n    }\n    return acc;\n  }, walker);\n};\nexports.walk = function (start, callback) {\n  fs.lstat(start, function (err, stat) {\n    if (err) {\n      return callback(err);\n    }\n    if (stat.isDirectory()) {\n      fs.readdir(start, function (err, files) {\n        const coll = files.reduce(function (acc, i) {\n          const abspath = path.join(start, i);\n          if (fs.statSync(abspath).isDirectory()) {\n            exports.walk(abspath, callback);\n            acc.dirs.push(abspath);\n          } else {\n            acc.names.push(abspath);\n          }\n          return acc;\n        }, {\n          \"names\": [],\n          \"dirs\": []\n        });\n        return callback(null, start, coll.dirs, coll.names);\n      });\n    } else {\n      return callback(new Error(\"path: \" + start + \" is not a directory\"));\n    }\n  });\n};\nexports.walkSync = function (start, callback) {\n  const stat = fs.statSync(start);\n  if (stat.isDirectory()) {\n    const filenames = fs.readdirSync(start);\n    const coll = filenames.reduce(function (acc, name) {\n      const abspath = path.join(start, name);\n      if (fs.statSync(abspath).isDirectory()) {\n        acc.dirs.push(name);\n      } else {\n        acc.names.push(name);\n      }\n      return acc;\n    }, {\n      \"names\": [],\n      \"dirs\": []\n    });\n    callback(start, coll.dirs, coll.names);\n    coll.dirs.forEach(function (d) {\n      const abspath = path.join(start, d);\n      exports.walkSync(abspath, callback);\n    });\n  } else {\n    throw new Error(\"path: \" + start + \" is not a directory\");\n  }\n};\nexports.path = {};\nexports.path.abspath = function (to) {\n  let from;\n  switch (to.charAt(0)) {\n    case \"~\":\n      from = process.env.HOME;\n      to = to.substr(1);\n      break;\n    case path.sep:\n      from = \"\";\n      break;\n    default:\n      from = process.cwd();\n      break;\n  }\n  return path.join(from, to);\n};\nexports.path.relativePath = function (base, compare) {\n  base = base.split(path.sep);\n  compare = compare.split(path.sep);\n  if (base[0] === \"\") {\n    base.shift();\n  }\n  if (compare[0] === \"\") {\n    compare.shift();\n  }\n  const l = compare.length;\n  for (let i = 0; i < l; i++) {\n    if (!base[i] || base[i] !== compare[i]) {\n      return compare.slice(i).join(path.sep);\n    }\n  }\n  return \"\";\n};\nexports.path.join = function (head, tail) {\n  if (head === \"\") {\n    return tail;\n  } else {\n    return path.join(head, tail);\n  }\n};","map":{"version":3,"names":["path","require","fs","exports","mkdirs","_path","mode","callback","abspath","dirs","split","sep","walker","shift","walk","ds","acc","m","cb","length","d","push","dir","join","stat","err","errno","mkdir","erro","isDirectory","Error","mkdirsSync","process","cwd","reduce","statSync","mkdirSync","start","lstat","readdir","files","coll","i","names","walkSync","filenames","readdirSync","name","forEach","to","from","charAt","env","HOME","substr","relativePath","base","compare","l","slice","head","tail"],"sources":["C:/Users/Syahrul/PKM/test-react/portfolio-alpha/src/backend.js"],"sourcesContent":["const path = require('path');\r\nconst fs = require('fs');\r\n\r\nexports.mkdirs = function (_path, mode, callback) {\r\n  _path = exports.path.abspath(_path);\r\n\r\n  const dirs = _path.split(path.sep);\r\n  const walker = [dirs.shift()];\r\n\r\n  const walk = function (ds, acc, m, cb) {\r\n    if (ds.length > 0) {\r\n      const d = ds.shift();\r\n      acc.push(d);\r\n      const dir = acc.join(path.sep);\r\n\r\n      fs.stat(dir, function (err, stat) {\r\n        if (err) {\r\n          if (err.errno === -2 || err.errno === -4058) { // Adjusted for cross-platform compatibility\r\n            fs.mkdir(dir, m, function (erro) {\r\n              if (erro && erro.errno !== -17 && erro.errno !== -4058) {\r\n                return cb(erro);\r\n              } else {\r\n                return walk(ds, acc, m, cb);\r\n              }\r\n            });\r\n          } else {\r\n            return cb(err);\r\n          }\r\n        } else {\r\n          if (stat.isDirectory()) {\r\n            return walk(ds, acc, m, cb);\r\n          } else {\r\n            return cb(new Error(\"Failed to mkdir \" + dir + \": File exists\\n\"));\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      return cb();\r\n    }\r\n  };\r\n  return walk(dirs, walker, mode, callback);\r\n};\r\n\r\nexports.mkdirsSync = function (_path, mode) {\r\n  if (_path[0] !== path.sep) {\r\n    _path = path.join(process.cwd(), _path);\r\n  }\r\n\r\n  const dirs = _path.split(path.sep);\r\n  const walker = [dirs.shift()];\r\n\r\n  dirs.reduce(function (acc, d) {\r\n    acc.push(d);\r\n    const dir = acc.join(path.sep);\r\n\r\n    try {\r\n      const stat = fs.statSync(dir);\r\n      if (!stat.isDirectory()) {\r\n        throw new Error(\"Failed to mkdir \" + dir + \": File exists\");\r\n      }\r\n    } catch (err) {\r\n      fs.mkdirSync(dir, mode);\r\n    }\r\n    return acc;\r\n  }, walker);\r\n};\r\n\r\nexports.walk = function (start, callback) {\r\n  fs.lstat(start, function (err, stat) {\r\n    if (err) { return callback(err); }\r\n    if (stat.isDirectory()) {\r\n      fs.readdir(start, function (err, files) {\r\n        const coll = files.reduce(function (acc, i) {\r\n          const abspath = path.join(start, i);\r\n\r\n          if (fs.statSync(abspath).isDirectory()) {\r\n            exports.walk(abspath, callback);\r\n            acc.dirs.push(abspath);\r\n          } else {\r\n            acc.names.push(abspath);\r\n          }\r\n          return acc;\r\n        }, { \"names\": [], \"dirs\": [] });\r\n\r\n        return callback(null, start, coll.dirs, coll.names);\r\n      });\r\n    } else {\r\n      return callback(new Error(\"path: \" + start + \" is not a directory\"));\r\n    }\r\n  });\r\n};\r\n\r\nexports.walkSync = function (start, callback) {\r\n  const stat = fs.statSync(start);\r\n\r\n  if (stat.isDirectory()) {\r\n    const filenames = fs.readdirSync(start);\r\n\r\n    const coll = filenames.reduce(function (acc, name) {\r\n      const abspath = path.join(start, name);\r\n\r\n      if (fs.statSync(abspath).isDirectory()) {\r\n        acc.dirs.push(name);\r\n      } else {\r\n        acc.names.push(name);\r\n      }\r\n      return acc;\r\n    }, { \"names\": [], \"dirs\": [] });\r\n\r\n    callback(start, coll.dirs, coll.names);\r\n\r\n    coll.dirs.forEach(function (d) {\r\n      const abspath = path.join(start, d);\r\n      exports.walkSync(abspath, callback);\r\n    });\r\n  } else {\r\n    throw new Error(\"path: \" + start + \" is not a directory\");\r\n  }\r\n};\r\n\r\nexports.path = {};\r\n\r\nexports.path.abspath = function (to) {\r\n  let from;\r\n  switch (to.charAt(0)) {\r\n    case \"~\": from = process.env.HOME; to = to.substr(1); break;\r\n    case path.sep: from = \"\"; break;\r\n    default: from = process.cwd(); break;\r\n  }\r\n  return path.join(from, to);\r\n};\r\n\r\nexports.path.relativePath = function (base, compare) {\r\n  base = base.split(path.sep);\r\n  compare = compare.split(path.sep);\r\n\r\n  if (base[0] === \"\") {\r\n    base.shift();\r\n  }\r\n\r\n  if (compare[0] === \"\") {\r\n    compare.shift();\r\n  }\r\n\r\n  const l = compare.length;\r\n\r\n  for (let i = 0; i < l; i++) {\r\n    if (!base[i] || (base[i] !== compare[i])) {\r\n      return compare.slice(i).join(path.sep);\r\n    }\r\n  }\r\n  return \"\";\r\n};\r\n\r\nexports.path.join = function (head, tail) {\r\n  if (head === \"\") {\r\n    return tail;\r\n  } else {\r\n    return path.join(head, tail);\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}