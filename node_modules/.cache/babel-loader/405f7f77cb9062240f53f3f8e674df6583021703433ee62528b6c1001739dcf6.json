{"ast":null,"code":"var fs = require('fs');\nvar _ = require('lodash');\nvar file = require('file');\nvar jsdoc = require('doctrine');\nvar srcRoot = fs.realpathSync(__dirname + '/../src');\nvar commentRE = /^(\\s+)?(\\/\\*)?\\*(\\/)?\\s?/mg;\nvar jsdocRE = /[^\\S\\r\\n]*\\/(?:\\*{2})([\\W\\w]+?)\\*\\//mg;\nvar stripComments = function (str) {\n  return str.replace(commentRE, '');\n};\nfunction options(cb, allMetadata) {\n  var opts;\n  file.walkSync(srcRoot, function (start, dirs, files) {\n    opts = _.chain(files).map(function (file) {\n      var srcFile = fs.readFileSync(start + '/' + file, 'utf8');\n      var docs = srcFile.match(jsdocRE);\n      if (docs) {\n        docs = docs.map(stripComments).map(function (str) {\n          return jsdoc.parse(str, {\n            sloppy: true,\n            tags: ['access', 'author', 'class', 'example', 'function', 'memberOf', 'name', 'optionName', 'optionProp', 'param', 'params', 'preserve', 'private', 'returns', 'type']\n          });\n        });\n        var option = _.chain(docs).flatten().filter(function (doc) {\n          if (allMetadata) {\n            return true;\n          } else {\n            return doc && _.some(doc.tags, {\n              title: 'optionName'\n            });\n          }\n        }).map(function (opt) {\n          if (allMetadata) {\n            return opt;\n          } else {\n            var tags = opt.tags.filter(function (tag) {\n              return tag.title.indexOf('option') === 0;\n            });\n            return {\n              name: _.filter(tags, {\n                title: 'optionName'\n              })[0].description,\n              property: _.filter(tags, {\n                title: 'optionProp'\n              })[0].description\n            };\n          }\n        }).value();\n        return option;\n      }\n    }).filter(function (doc) {\n      return doc && doc.length;\n    }).flatten().value();\n  });\n  if (cb) {\n    cb(opts);\n  }\n  return opts;\n}\nmodule.exports = options;","map":{"version":3,"names":["fs","require","_","file","jsdoc","srcRoot","realpathSync","__dirname","commentRE","jsdocRE","stripComments","str","replace","options","cb","allMetadata","opts","walkSync","start","dirs","files","chain","map","srcFile","readFileSync","docs","match","parse","sloppy","tags","option","flatten","filter","doc","some","title","opt","tag","indexOf","name","description","property","value","length","module","exports"],"sources":["C:/Users/Syahrul/PKM/test-react/portfolio-alpha/node_modules/modernizr/lib/options.js"],"sourcesContent":["var fs = require('fs');\nvar _ = require('lodash');\nvar file = require('file');\nvar jsdoc = require('doctrine');\nvar srcRoot = fs.realpathSync(__dirname + '/../src');\nvar commentRE = /^(\\s+)?(\\/\\*)?\\*(\\/)?\\s?/mg;\nvar jsdocRE = /[^\\S\\r\\n]*\\/(?:\\*{2})([\\W\\w]+?)\\*\\//mg;\n\nvar stripComments = function(str) {\n  return str.replace(commentRE, '');\n};\n\nfunction options(cb, allMetadata) {\n  var opts;\n\n  file.walkSync(srcRoot, function(start, dirs, files) {\n    opts = _.chain(files)\n      .map(function(file) {\n        var srcFile = fs.readFileSync(start + '/' + file, 'utf8');\n        var docs = srcFile.match(jsdocRE);\n\n        if (docs) {\n          docs = docs\n            .map(stripComments)\n            .map(function(str) {\n              return jsdoc.parse(str, {\n                sloppy: true,\n                tags: [\n                  'access',\n                  'author',\n                  'class',\n                  'example',\n                  'function',\n                  'memberOf',\n                  'name',\n                  'optionName',\n                  'optionProp',\n                  'param',\n                  'params',\n                  'preserve',\n                  'private',\n                  'returns',\n                  'type'\n                ]\n              });\n            });\n\n          var option = _.chain(docs)\n            .flatten()\n            .filter(function(doc) {\n              if (allMetadata) {\n                return true;\n              } else {\n                return doc && _.some(doc.tags, {title: 'optionName'});\n              }\n            })\n            .map(function(opt) {\n              if (allMetadata) {\n                return opt;\n              } else {\n                var tags = opt.tags.filter(function(tag) {\n                  return tag.title.indexOf('option') === 0;\n                });\n\n                return {\n                  name: _.filter(tags, {title: 'optionName'})[0].description,\n                  property: _.filter(tags, {title: 'optionProp'})[0].description\n                };\n              }\n            })\n            .value();\n\n          return option;\n        }\n      })\n      .filter(function(doc) {\n        return doc && doc.length;\n      })\n      .flatten()\n      .value();\n  });\n\n  if (cb) {\n    cb(opts);\n  }\n\n  return opts;\n}\n\nmodule.exports = options;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}